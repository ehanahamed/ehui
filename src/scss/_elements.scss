$font-family: sans-serif !default;
$border-radius: 0.8rem !default;
$border-radius-button: 1.6rem !default;
$border-radius-textbox: 0.8rem !default;
$border-radius-textbox-searchbar: 1.6rem !default;
$border-radius-checkbox: 0.6rem !default;
$border-radius-text: 0.4rem !default;
$font-weight-button: normal !default;
$font-weight-link: normal !default;

html {
  height: auto;
  font-size: 18px;
  scroll-behavior: smooth;
}

@media only screen and (max-width: 800px) {
  html {
    font-size: 16px;
  }
}

body {
  height: auto;
  background-color: var(--bg-1);
  color: var(--fg-1);
  font-size: 1rem;
  line-height: 1.4;
  font-family: $font-family;
  font-weight: normal;
  margin: 0px;
}

::selection {
  background-color: var(--select-bg);
  color: var(--on-select-bg);
}

h1,
.h1 {
  font-size: 3.4rem;
  font-weight: bold;
  margin-bottom: 1rem;
  margin-top: 0px;
}

h2,
.h2 {
  font-size: 2.8rem;
  font-weight: bold;
  margin-bottom: 1rem;
  margin-top: 0px;
}

h3,
.h3 {
  font-size: 2.2rem;
  font-weight: bold;
  margin-bottom: 1rem;
  margin-top: 0px;
}

h4,
.h4 {
  font-size: 1.6rem;
  font-weight: bold;
  margin-bottom: 1rem;
  margin-top: 0px;
}

h1, h2, h3, h4,
.h1, .h2, .h3, .h4 {
  line-height: 1.2;
}

h5,
.h5,
p {
  font-size: 1rem;
  font-weight: normal;
  margin-top: 0px;
  margin-bottom: 1rem;
}
p {
  margin-block-end: 0px;
}

h6,
.h6,
small {
  font-size: 0.8rem;
  font-weight: normal;
  margin-bottom: 1rem;
}

h5, p, h6, small,
.h5, .h6 {
  line-height: 1.4;
}

b,
.b {
  font-weight: bold;
}

i,
.i {
  font-style: italic;
}

/*
nerdfont icons shouldn't have same styling as italic element lol
*/
i.nf {
  font-style: normal;
}

s,
.s {
  text-decoration: line-through;
}

mark,
.mark {
  background-color: var(--fg-1);
  color: var(--bg-1);
  border-radius: $border-radius-text;
  padding: 0.2rem 0.4rem;
  font-size: 1rem;
  line-height: 1.4;
}

code,
.code {
  font-family: monospace;
  background-color: var(--bg-3);
  border-radius: $border-radius-text;
  padding: 0.2rem 0.4rem;
  font-size: 1rem;
  line-height: 1.4;
}

.box {
  background-color: var(--bg-2);
  color: var(--fg-1);
  border: 0.2rem solid var(--bg-2);
  border-radius: $border-radius;
  padding: 1rem;
}

.extra .box {
  background-color: var(--bg-1);
  border-color: var(--bg-1);
}

.hero {
  border-bottom: 0.2rem solid var(--border);
  text-align: center;
  padding: 1rem;
  padding-bottom: 4rem;
  margin: 4rem 1rem;
}

.topmost {
  /* "topmost" is those alert bar thingies that are ABOVE the header, they're the top-most */
  margin: 1rem;
}

header,
.header {
  position: static;
  /* TEMP*/
  height: 4rem;
  background-color: var(--bg-1);
  border-bottom: 0.2rem solid var(--border);
  padding: 0px;
  margin-top: 0px;
  margin-left: 0px;
  margin-right: 0px;
  margin-bottom: 1rem;
}

header.sticky,
.header.sticky {
  position: sticky;
  z-index: 10;
  top: 0px;
  margin-top: 0px;
  margin-left: 0px;
  margin-right: 0px;
  margin-bottom: 0px;
}

header > .nav,
.nav-menu {
  display: flex;
  gap: 1rem;
  flex-wrap: nowrap;
  align-items: stretch;
  margin: 0px 1rem;
}

.nav > div,
.nav-menu > div {
  border-bottom: 0.2rem solid var(--bg-1);
}

.nav > div.current,
.nav-menu > div.current {
  border-bottom: 0.2rem solid var(--main-alt);
}

.nav > div.current > a,
.nav-menu > div.current > a {
  color: var(--main-alt);
}

.nav-menu-toggle,
.nav-menu-open, 
.nav-menu-close {
  display: none;
}

@media only screen and (max-width: 800px) {
  .nav-menu {
    display: none;

    position: fixed;
    top: 0px;
    left: 0px;
    gap: 0.4rem;
    flex-direction: column;
    align-items: stretch;
    align-content: stretch;
    justify-items: flex-start;
    justify-content: flex-start;
    margin: 0px;
    padding: 4rem;
    background-color: var(--bg-1);
    z-index: 20;
    height: 100%;
    width: 100%;
    border: none;
  }

  .nav-menu-open {
    position: static;
    display: inline-block;
    padding-left: 1rem;
    margin-top: auto;
    margin-bottom: auto;
  }
  .nav-menu-close {
    display: none;
  }

  .nav-menu-toggle:checked ~ .nav-menu-close {
    display: inline-block;
    position: fixed;
    top: 1rem;
    right: 1rem;
    margin: 0px;
    z-index: 21;
  }
  .nav-menu-toggle:checked ~ .nav-menu-open {
    display: none;
  }

  .nav-menu-toggle:checked ~ .nav-menu {
    display: flex;
  }

  .nav-menu > div,
  .nav-menu > div.current {
    padding: 0px;
    margin: 0px;
    border: none;
  }

  .nav-menu > div.current > a,
  .nav-menu > div.current > .a,
  .nav-menu > div.current > button,
  .nav-menu > div.current > .button {
    color: var(--main);
    background-color: var(--bg-3);
    border: none;
  }

  .nav-menu > div > a,
  .nav-menu > div > .a,
  .nav-menu > div > button,
  .nav-menu > div > .button {
    margin: 0px;
    padding-left: 0.8rem;
    padding-top: 0.6rem;
    padding-bottom: 0.6rem;
    padding-right: 0.8rem;
    display: flex;
    justify-items: flex-start;
    justify-content: flex-start;
    border-radius: 0.8rem;
    color: var(--fg-1);
  }

  .nav-menu > div > a:hover,
  .nav-menu > div > .a:hover,
  .nav-menu > div > button:hover,
  .nav-menu > div > .button:hover,
  .nav-menu > div > a:focus,
  .nav-menu > div > .a:focus,
  .nav-menu > div > button:focus,
  .nav-menu > div > .button:focus {
    color: var(--fg-1);
    background-color: var(--bg-3);
  }

  .nav-menu > div > a:focus-visible,
  .nav-menu > div > .a:focus-visible,
  .nav-menu > div > button:focus-visible,
  .nav-menu > div > .button:focus-visible {
    outline: 0.2rem solid var(--main);
    outline-offset: 0px;
    border: none;
  }

  .nav-menu > div.current > a:hover,
  .nav-menu > div.current > .a:hover,
  .nav-menu > div.current > button:hover,
  .nav-menu > div.current > .button:hover,
  .nav-menu > div.current > a:focus,
  .nav-menu > div.current > .a:focus,
  .nav-menu > div.current > button:focus,
  .nav-menu > div.current > .button:focus {
    color: var(--main-alt-on-bg, var(--main-alt));
    background-color: var(--bg-3);
  }
}

footer,
.footer {
  border-top: 0.2rem solid var(--border);
  text-align: center;
  padding: 1rem;
  padding-top: 4rem;
  margin: 4rem 1rem;
}

table {
  border-collapse: separate;
  border-spacing: 0px;
  border-radius: $border-radius;
  border: 0.2rem solid var(--border);
}

td {
  font-weight: normal;
  text-align: left;
  padding: 1rem;
}

th {
  font-weight: bold;
  text-align: left;
  padding: 1rem;
}

table.outer td,
table.outer th,
table.outer thead,
table.outer tbody,
table.outer tfoot {
  border: none;
}

table.inner th:not(:last-child),
table.inner td:not(:last-child) {
 border-right: 0.2rem solid var(--border);
}

table.inner > thead > tr > th,
table.inner > thead > tr > td,
table.inner > tbody > tr:not(:last-child) > th,
table.inner > tbody > tr:not(:last-child) > td,
table.inner > tr:not(:last-child) > td,
table.inner > tr:not(:last-child) > th,
table.inner > thead:not(:last-child),
table.inner > tbody:not(:last-child) {
  border-bottom: 0.2rem solid var(--border);
}

a,
.a {
  color: var(--main-on-bg);
  cursor: pointer;
  border-radius: $border-radius-text;
  font-size: 1rem;
  font-weight: $font-weight-link;
  line-height: 1.4;
  text-decoration: none;
  transition-duration: 0.2s;
  transition-timing-function: ease-out;
}

a:hover,
a:focus,
.a:hover,
.a:focus {
  color: var(--main-alt-on-bg, var(--main-alt));
}

a:focus-visible,
.a:focus-visible {
  outline: 0.2rem solid var(--main-on-bg);
  outline-offset: 0.4rem;
  transition-duration: 0.1s;
}

button,
.button {
  display: inline-flex;
  appearance: none;
  align-items: center;
  justify-items: center;
  justify-content: center;
  gap: 0.4rem;
  box-sizing: border-box;
  text-align: center;
  cursor: pointer;
  text-decoration: none;
  background-color: var(--main);
  color: var(--on-main);
  border: none;
  border-radius: $border-radius-button;
  padding: 0.6rem 1rem;
  font-family: $font-family;
  font-size: 1rem;
  font-weight: $font-weight-button;
  line-height: 1.4;
  transition-duration: 0.2s;
  transition-timing-function: ease-out;
}

button,
.button,
a,
.a {
  -webkit-tap-highlight-color: transparent;
}

button.alt,
.button.alt {
  background-color: var(--bg-2);
  color: var(--main);
}

button:hover,
button:focus,
.button:hover,
.button:focus {
  background-color: var(--main-alt);
  color: var(--bg-1);
}

button.alt:hover,
button.alt:focus,
.button.alt:hover,
.button.alt:focus {
  background-color: var(--bg-3);
  color: var(--main-alt);
}

button:focus-visible,
.button:focus-visible {
  outline: 0.2rem solid var(--main);
  outline-offset: 0.2rem;
  transition-duration: 0.1s;
}

.select-wrapper {
  position: relative;
  display: inline-block;
  width: 18rem;
}

.select-wrapper select {
  appearance: none;
  width: 100%;
  font-size: 1rem;
  padding: 0.6rem 1rem;
  background-color: var(--bg-2);
  border: 0.2rem solid var(--border);
  border-radius: 0.8rem;
  color: var(--fg);
  cursor: pointer;
  transition-duration: 0.4s;
  outline: none;
}

.select-wrapper::before,
.select-wrapper::after {
  content: "";
  position: absolute;
  right: 1rem;
  pointer-events: none;
}

.select-wrapper::before {
  border-left: 0.3rem solid transparent;
  border-right: 0.3rem solid transparent;
  border-bottom: 0.3rem solid var(--fg-1);
  top: 38%;
}

.select-wrapper::after {
  border-left: 0.3rem solid transparent;
  border-right: 0.3rem solid transparent;
  border-top: 0.3rem solid var(--fg-1);
  top: 54%;
}

.select-wrapper select:hover {
  background-color: var(--bg-3);
}
.select-wrapper select:focus,
.select-wrapper select:hover:focus {
  background-color: var(--bg-2);
  border-color: var(--fg-0);
}

::placeholder {
  color: var(--fg-0);
  font-size: 1rem;
  font-family: $font-family;
  font-weight: normal;
  opacity: 1;
}

input[type="text"],
input[type="password"],
textarea {
  display: inline-block;
  appearance: none;
  align-items: flex-start;
  box-sizing: border-box;
  text-align: left;
  cursor: text;
  text-decoration: none;
  font-family: $font-family;
  background-color: var(--bg-1);
  color: var(--fg-1);
  border: 0.2rem solid var(--border);
  border-radius: $border-radius-textbox;
  outline: none;
  padding: 0.4rem 0.8rem;
  font-size: 1rem;
  line-height: 1.4;
  transition-duration: 0.2s;
  transition-timing-function: ease-out;
}

input[type="text"]:hover,
input[type="password"]:hover,
textarea:hover {
  border-color: var(--border);
  background-color: var(--bg-2);
}

input[type="text"]:focus,
input[type="password"]:focus,
textarea:focus {
  border-color: var(--main);
  background-color: var(--bg-1);
}

.searchbar {
  display: flex;
  width: 100%;
  gap: 0px;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: center;
  background-color: var(--bg-2);
  border: 0.2rem solid var(--bg-2);
  border-radius: $border-radius-textbox-searchbar;
  transition-duration: 0.2s;
  transition-timing-function: ease-out;
}

.searchbar > .searchbar-icon {
  margin-left: 0.6rem;
  margin-top: 0px;
  margin-bottom: 0px;
  margin-right: 0px;
  color: var(--fg-0);
}

.searchbar > input[type="text"],
.searchbar > input[type="text"]:hover,
.searchbar > input[type="text"]:focus {
  width: 100%;
  margin-top: 0px;
  background-color: transparent;
  border: none;
  border-radius: 0px;
  padding-left: 0.6rem;
}

.searchbar > input[type="text"]:focus-visible {
  background-color: transparent;
  border: none;
}

.searchbar:hover {
  background: var(--bg-3);
  border-color: var(--bg-3);
}

.searchbar:focus-within {
  background: var(--bg-2);
  border-color: var(--main);
}

.searchbar.with-autocomplete {
  position: relative;
}

.searchbar.with-autocomplete > .searchbar-autocomplete {
  position: absolute;
  top: 100%;
  left: 0px;
  right: 0px;
  width: 100%;
  display: none;
  /*display: flex;*/
  flex-direction: column;
  flex-wrap: nowrap;
  justify-items: stretch;
  gap: 0.2rem;
  margin-top: 0.4rem;
  padding: 0.4rem;
  background: var(--bg-2);
  border: 0.2rem solid var(--border);
  border-radius: $border-radius;
}

.searchbar.with-autocomplete:focus > .searchbar-autocomplete {
  display: flex;
}
/*
  use seperate focus-within rule so that unsupported browsers still use above rule for same styling
  otherwise, one invalid selector makes the whole rule invalid
*/
.searchbar.with-autocomplete:focus-within > .searchbar-autocomplete {
  display: flex;
}

/* make sure :focus and :focus-within do not override .hide */
.searchbar.with-autocomplete:focus > .searchbar-autocomplete.hide {
  display: none;
}
.searchbar.with-autocomplete:focus-within > .searchbar-autocomplete.hide {
  display: none;
}

.searchbar-autocomplete > a,
.searchbar-autocomplete > .a {
  margin-top: 0px;
  padding: 0.2rem 0.6rem;
  border: none;
  color: var(--fg-1);
  background-color: var(--bg-2);
}

.searchbar-autocomplete > a:hover,
.searchbar-autocomplete > .a:hover {
  color: var(--main-alt);
  background-color: var(--bg-3);
}

/* extra focus-visible to override link's other styles */
.searchbar-autocomplete > a:focus-visible,
.searchbar-autocomplete > .a:focus-visible {
  color: var(--main-alt);
  background-color: var(--bg-3);
  border: none;
  outline: none;
}

.card {
  width: 40rem;
  height: 20rem;
}

.caption {
  width: 40rem;
  display: grid;
  gap: 1rem;
  grid-template-rows: 1fr;
}

.caption.centerThree {
  grid-template-columns: 1fr 4fr 1fr;
}

.caption.evenTwo {
  grid-template-columns: 1fr 1fr;
}

.caption.evenThree {
  grid-template-columns: 1fr 1fr 1fr;
}

@media only screen and (max-width: 800px) {
  .card,
  .caption {
    width: 100%;
  }
}

.card > .content {
  display: flex;
  position: relative;
  width: 100%;
  height: 100%;
  padding: 1rem;
  background-color: var(--bg-2);
  border-radius: $border-radius;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.card.double {
  perspective: 1000px;
}

.card.double > .content {
  display: block;
  transition: transform 0.4s ease-in-out;
  transform-style: preserve-3d;
  background-color: inherit;
  border-radius: 0px;
  padding: 0px;
  align-items: normal;
  justify-content: normal;
  text-align: center;
}

.card.double > .content > .front,
.card.double > .content > .back {
  display: flex;
  position: absolute;
  width: 100%;
  height: 100%;
  margin-top: 0px;
  padding: 1rem;
  background-color: var(--bg-2);
  border-radius: $border-radius;
  align-items: center;
  justify-content: center;
  text-align: center;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  transform: rotateX(0deg);
  box-shadow: 0px 4px 10px 2px rgba(0,0,0,0.1);
}

.card.double > .content > .back {
  transform: rotateY(180deg);
}

.card.double.flip > .content {
  transform: rotateY(180deg);
}

.separator {
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--fg-0);
}

.separator::before,
.separator::after {
  content: "";
  display: block;
  background: var(--border);
  width: 100%;
  height: 0.2rem;
  margin: 0px 1rem;
}

.modal {
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 101;
  position: fixed;
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
}

.modal::before {
  content: "";
  position: fixed;
  z-index: 101;
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
  background-color: var(--bg-0);
  opacity: 0.6;
}

.modal > .content {
  z-index: 102;
  min-width: 40vw;
  width: auto;
  max-width: 90vw;
  background-color: var(--bg-1);
  border: 0.2rem solid var(--border);
  border-radius: $border-radius;
  padding: 1rem;
}

@media only screen and (max-width: 800px) {
  .modal > .content {
    width: 90vw;
  }
}

.flex.pop {
  padding: 0px 1rem;
}

/* .dropdown html structure:
<div class="dropdown">
  <button>Toggle Dropdown!</button>
  <div class="content">
    <button>Something</button>
    <button>Another thing</button>
    <button>More things</button>
  </div>
</div>
*/
.dropdown {
  position: relative;
  display: inline-block;
}

.dropdown .content {
  display: none;
  position: absolute;
  z-index: 20;
  flex-direction: column;
  align-items: stretch;
  gap: 0.4rem;
  margin-top: 0.4rem;
  padding: 0.4rem;
  background: var(--bg-2);
  border: 0.2rem solid var(--border);
  border-radius: $border-radius;
}

.dropdown.left .content {
  right: 0px;
}

.dropdown:focus-within .content {
  display: flex;
}

.dropdown .content button,
.dropdown .content .button {
  justify-items: start;
  justify-content: start;
  margin-top: 0px;
  text-wrap: nowrap;
  background-color: var(--bg-2);
  border-color: var(--bg-2);
  color: var(--main);
}

.dropdown .content button:hover,
.dropdown .content .button:hover,
.dropdown .content button:focus,
.dropdown .content .button:focus {
  background-color: var(--bg-3);
  border-color: var(--bg-3);
  color: var(--main-alt);
}

button.dropdown-toggle,
.button.dropdown-toggle,
button.icon-only-button,
.button.icon-only-button,
button.faint,
.button.faint {
  background-color: transparent;
  border: none;
  color: var(--fg-1);
}

button.icon-only-button,
.button.icon-only-button {
  padding: 0.6rem;
}

button.dropdown-toggle:hover,
.button.dropdown-toggle:hover,
button.dropdown-toggle:focus,
.button.dropdown-toggle:focus,
button.icon-only-button:hover,
.button.icon-only-button:hover,
button.icon-only-button:focus,
.button.icon-only-button:focus,
button.faint:hover,
.button.faint:hover,
button.faint:focus,
.button.faint:focus {
  background-color: var(--bg-3);
  border: none;
  color: var(--main-alt);
}

.combo-select {
  display: flex;
  gap: 0px;
  align-items: stretch;
}

.combo-select > .left,
.combo-select > button.left,
.combo-select > .button.left {
  margin-right: 0px;
  margin-bottom: 0px;
  margin-top: 0px;
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
}

.combo-select > .mid,
.combo-select > button.mid,
.combo-select > .button.mid {
  margin: 0px;
  border-radius: 0px;
}
.combo-select > .right,
.combo-select > button.right,
.combo-select > .button.right {
  margin-left: 0px;
  margin-bottom: 0px;
  margin-top: 0px;
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px;
}

.combo-select > button,
.combo-select > .button {
  background-color: var(--bg-2);
  color: var(--main);
  border-color: var(--bg-2);
}

.combo-select > button:hover,
.combo-select > .button:hover,
.combo-select > button:focus,
.combo-select > .button:focus {
  background-color: var(--bg-3);
  color: var(--main-alt);
  border-color: var(--bg-3);
}

.combo-select > .selected,
.combo-select > button.selected,
.combo-select > .button.selected {
  background-color: var(--main);
  color: var(--bg-1);
  border-color: var(--main);
}

.combo-select > button.selected:hover,
.combo-select > .button.selected:hover,
.combo-select > button.selected:focus,
.combo-select > .button.selected:focus {
  background-color: var(--main-alt);
  color: var(--bg-1);
  border-color: var(--main-alt);
}

.combo-select .combo-selected-icon {
  display: none;
}

.combo-select > .selected > .combo-selected-icon {
  display: inline;
}

.combo-buttons {
  display: flex;
  gap: 0px;
  align-items: stretch;
}

.combo-buttons > .left,
.combo-buttons > button.left,
.combo-buttons > .button.left {
  margin-right: 0px;
  margin-bottom: 0px;
  margin-top: 0px;
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
}

.combo-buttons > .mid,
.combo-buttons > button.mid,
.combo-buttons > .button.mid {
  margin: 0px;
  border-radius: 0px;
}
.combo-buttons > .right,
.combo-buttons > button.right,
.combo-buttons > .button.right {
  margin-left: 0px;
  margin-bottom: 0px;
  margin-top: 0px;
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px;
}

.combo-buttons > button:focus-visible,
.combo-buttons > .button:focus-visible,
.combo-select > button:focus-visible,
.combo-select > .button:focus-visible {
  /* fix adjacent buttons overlapping outline */
  position: relative;
  z-index: 2;
}

button.button-box,
.button.button-box {
  display: inline-block;
  color: var(--fg-1);
  background: var(--bg-2);
  border: 0.2rem solid var(--bg-2);
  border-radius: $border-radius;
}

button.button-box:hover,
button.button-box:focus,
.button.button-box:hover,
.button.button-box:focus {
  color: var(--main-alt);
  background: var(--bg-3);
  border-color: var(--bg-3);
}

button.button-box:focus-visible,
.button.button-box:focus-visible {
  outline-offset: 0.4rem;
}

button.button-box.selected,
.button.button-box.selected {
  color: var(--main);
  border-color: var(--main);
}


button.button-box.selected:hover,
.button.button-box.selected:hover,
button.button-box.selected:focus,
.button.button-box.selected:focus {
  color: var(--main-alt);
  border-color: var(--main-alt);
}

details {
  border: 0.2rem solid var(--border);
  border-radius: $border-radius;
  padding: 1rem;
}

summary {
  font-weight: $font-weight-button;
  padding: 0px;
  border: none;
  margin: 0px;
}

details[open] summary {
  padding-bottom: 1rem;
  border-bottom: 0.2rem solid var(--border);
  margin-bottom: 1rem;
}

/*
  <div class="progress-bar">
    <div style="width: 12%;"></div>
  </div>
 */
.progress-bar {
  height: 1rem;
  border-radius: 1rem;
  overflow: hidden;
  background-color: var(--border);
}
.progress-bar > div {
  content: "";
  height: 1rem;
  border-radius: 1rem;
  background-color: var(--main);
  transition: width 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}
.progress-bar.thin {
  height: 0.4rem;
}
.progress-bar.thin > div {
  height: 0.4rem;
}

.progress-bar.yay > div {
  background-color: var(--yay);
}
.progress-bar.ohno > div {
  background-color: var(--ohno);
}
.progress-bar.fg0 > div {
  background-color: var(--fg-0);
}
.progress-bar.fg1 > div {
  background-color: var(--fg-1);
}
.progress-bar.main > div {
  background-color: var(--main);
}
